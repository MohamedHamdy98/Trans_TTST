name: Docker Image CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      # Clean up Docker system to free space
      - name: Clean up Docker system
        run: docker system prune -af
      
      # Remove Docker build cache
      - name: Remove Docker build cache
        run: docker builder prune --all --force

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      # Set up Docker image tag
      - name: Set up Docker image tag
        run: echo "IMAGE_TAG=mohammedhamdy98/ttst-fastapi-docker:$(date +%s)" >> $GITHUB_ENV
      
      # Build the Docker image with --no-cache-dir to reduce space usage
      - name: Build the Docker image
        run: |
          docker buildx build \
            --file dockerfile.gpu \
            --tag ${{ env.IMAGE_TAG }} \
            --build-arg PYTHON_VERSION=3.10 \
            --build-arg DEBIAN_FRONTEND=noninteractive \
            --build-arg PIP_NO_CACHE_DIR=1 \  # Disable pip caching to save space
            --cache-from=type=registry,ref=mohammedhamdy98/ttst-fastapi-docker:cache \
            --cache-to=type=registry,ref=mohammedhamdy98/ttst-fastapi-docker:cache,mode=max \
            --push .

      # Optionally, cache Docker layers to speed up subsequent builds
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
