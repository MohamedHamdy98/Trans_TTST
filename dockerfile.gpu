# Stage 1: Build stage
FROM nvidia/cuda:11.7.1-cudnn8-runtime-ubuntu20.04 as build

# Install necessary system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    python3.10 \
    python3.10-dev \
    python3.10-distutils \
    && rm -rf /var/lib/apt/lists/*

# Ensure python3 points to python3.10
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1

# Upgrade pip for Python 3.10
RUN curl -sS https://bootstrap.pypa.io/get-pip.py | python3

# Copy the requirements file first to leverage Docker cache
COPY requirements.txt /app/requirements.txt

# Install Python dependencies
RUN pip install --no-cache-dir -r /app/requirements.txt && \
    rm -rf /root/.cache/pip

# Stage 2: Final stage
FROM nvidia/cuda:11.7.1-cudnn8-runtime-ubuntu20.04

# Set noninteractive mode for tzdata
ENV DEBIAN_FRONTEND=noninteractive

# Set environment variables for the container
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Install necessary system dependencies
RUN apt-get update && apt-get install -y \
    ffmpeg \
    libsndfile1 \
    python3.10 \
    python3.10-dev \
    python3.10-distutils \
    && rm -rf /var/lib/apt/lists/*

# Ensure python3 points to python3.10
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1

# Upgrade pip for Python 3.10
RUN curl -sS https://bootstrap.pypa.io/get-pip.py | python3

# Install Python dependencies again to ensure they are available in the final stage
COPY --from=build /app/requirements.txt /app/requirements.txt
RUN pip install --no-cache-dir -r /app/requirements.txt && \
    rm -rf /root/.cache/pip

# Copy the FastAPI application files
COPY . /app
WORKDIR /app

# Expose the FastAPI port
EXPOSE 5001

# Command to run the FastAPI app with uvicorn
CMD ["uvicorn", "app_fast:app", "--host", "0.0.0.0", "--port", "5001"]
