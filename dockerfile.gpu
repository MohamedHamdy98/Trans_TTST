# Stage 1: Build stage
FROM nvidia/cuda:11.7.1-cudnn8-runtime-ubuntu20.04 as build

# Install necessary system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    python3-pip \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy the requirements file first to leverage Docker cache
COPY requirements.txt /app/requirements.txt

# Install Python dependencies
RUN pip3 install --upgrade pip && \
    pip3 install --no-cache-dir -r /app/requirements.txt && \
    rm -rf /root/.cache/pip

# Stage 2: Final stage
FROM nvidia/cuda:11.7.1-cudnn8-runtime-ubuntu20.04

# Set noninteractive mode for tzdata
ENV DEBIAN_FRONTEND=noninteractive

# Set environment variables for the container
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Install necessary system dependencies
RUN apt-get update && apt-get install -y \
    ffmpeg \
    libsndfile1 \
    python3-pip \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies again to ensure they are available in the final stage
COPY --from=build /app/requirements.txt /app/requirements.txt
RUN pip3 install --upgrade pip && \
    pip3 install --no-cache-dir -r /app/requirements.txt && \
    rm -rf /root/.cache/pip

# Copy the FastAPI application files
COPY . /app
WORKDIR /app

# Ensure Python is installed and CUDA is available for torch and torchaudio
RUN python3 -c "import torch; assert torch.cuda.is_available(), 'CUDA not available'"

# Expose the FastAPI port
EXPOSE 5001

# Command to run the FastAPI app with uvicorn
CMD ["uvicorn", "app_fast:app", "--host", "0.0.0.0", "--port", "5001"]
